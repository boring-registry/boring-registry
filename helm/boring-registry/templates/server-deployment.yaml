apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "boring-registry.fullname" . }}
  labels:
    {{- include "boring-registry.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.server.replicas }}
  selector:
    matchLabels:
      {{- include "boring-registry.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.server.annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "boring-registry.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.server.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "boring-registry.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.server.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.server.securityContext | nindent 12 }}
          image: "{{ .Values.global.image.repository }}:{{ .Values.global.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          args:
            {{- if .Values.server.extraArgs }}
              {{- toYaml .Values.server.extraArgs | nindent 12 }}
            {{- end }}
          env:
            - name: BORING_REGISTRY_DEBUG
              value:  {{ .Values.server.debug | quote }}
            - name: BORING_REGISTRY_JSON
              value:  {{ .Values.server.jsonLogFormat | quote }}
            - name: BORING_REGISTRY_LISTEN_ADDRESS
              value: {{ printf ":%v" .Values.server.port | quote }}
            - name: BORING_REGISTRY_LISTEN_TELEMETRY_ADDRESS
              value: {{ printf ":%v" .Values.server.telemetryPort | quote }}

            - name: BORING_REGISTRY_AUTH_STATIC_TOKEN
            {{- if .Values.server.auth.createSecret }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "boring-registry.fullname" . }}
                  key: apiKey
            {{- else if .Values.server.auth.existingSecret }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.server.auth.existingSecret | quote }}
                  key: {{ .Values.server.auth.existingSecretKey | quote }}
            {{- else }}
              value: {{ .Values.server.auth.value | quote }}
            {{- end }}

            {{- if .Values.server.tlsCertFile }}
            - name: BORING_REGISTRY_TLS_CERT_FILE
              value:  {{ .Values.server.tlsCertFile | quote }}
            {{- end }}

            {{- if .Values.server.tlsKeyFile }}
            - name: BORING_REGISTRY_TLS_KEY_FILE
              value:  {{ .Values.server.tlsKeyFile | quote }}
            {{- end }}

            # Storage configuration.
            {{- with .Values.server.storage.s3 }}
            - name: BORING_REGISTRY_STORAGE_S3_BUCKET
              value:  {{ .bucket | quote }}
            {{- if .prefix }}
            - name: BORING_REGISTRY_STORAGE_S3_PREFIX
              value:  {{ .prefix | quote }}
            {{- end }}
            {{- if .region }}
            - name: BORING_REGISTRY_STORAGE_S3_REGION
              value:  {{ .region | quote }}
            {{- end }}
            {{- if .endpoint }}
            - name: BORING_REGISTRY_STORAGE_S3_ENDPOINT
              value:  {{ .endpoint | quote }}
            {{- end }}
            {{- if .pathStyle }}
            - name: BORING_REGISTRY_STORAGE_S3_PATHSTYLE
              value:  {{ .pathStyle | quote }}
            {{- end }}
            {{- end }}

            {{- with .Values.server.storage.gcs }}
            - name: BORING_REGISTRY_STORAGE_GCS_BUCKET
              value:  {{ .bucket | quote }}
            {{- if .prefix }}
            - name: BORING_REGISTRY_STORAGE_GCS_PREFIX
              value:  {{ .prefix | quote }}
            {{- end }}
            {{- if .saEmail }}
            - name: BORING_REGISTRY_STORAGE_GCS_SA_EMAIL
              value:  {{ .saEmail | quote }}
            {{- end }}
            {{- if .signedURL }}
            - name: BORING_REGISTRY_STORAGE_GCS_SIGNED_URL
              value:  {{ .signedURL | quote }}
            {{- end }}
            {{- end }}

            {{- range .Values.server.extraEnvs }}
            - name: {{ .name | quote }}
            {{- if .value }}
              value: {{ .value | quote }}
            {{- else if .valueFrom }}
              valueFrom: {{ toYaml .valueFrom | nindent 16 }}
            {{- end }}
            {{- end }}
          ports:
            - name: api
              containerPort: {{ .Values.server.port }}
              protocol: TCP
            - name: telemetry
              containerPort: {{ .Values.server.telemetryPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /metrics
              port: telemetry
          readinessProbe:
            httpGet:
              path: /metrics
              port: telemetry
          resources:
            {{- toYaml .Values.server.resources | nindent 12 }}
          {{- with .Values.server.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.server.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
        {{- if .Values.cachingProxy.enabled }}
        # Sidecar Nginx container
        - name: nginx
          image: "{{ .Values.cachingProxy.image.repository }}:{{ .Values.cachingProxy.image.tag | default "latest" }}"
          ports:
            - containerPort: 8000
              name: nginx
            - containerPort: 8080
              name: probes
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: ephemeral
              mountPath: "/var/cache/nginx"
          # we are passing through these probes
          livenessProbe:
            httpGet:
              path: /metrics
              port: probes
          readinessProbe:
            httpGet:
              path: /metrics
              port: probes
          resources:
            {{- toYaml .Values.cachingProxy.resources | nindent 12 }}
          {{- with .Values.cachingProxy.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: nginx-config
          configMap:
            name: nginx-config
        - name: ephemeral
          emptyDir:
            sizeLimit: {{ .Values.cachingProxy.cache.maxSize }}
      {{- end }}
      {{- with .Values.server.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.server.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.server.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
